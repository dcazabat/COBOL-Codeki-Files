       IDENTIFICATION DIVISION.
       PROGRAM-ID. PGMB7C7C.
       AUTHOR.        D. CAZABAT.
       INSTALLATION.  CURSO CODEKI.
       DATE-WRITTEN.  11/07/2025.
       DATE-COMPILED. 11/07/2025.
       SECURITY.      UNCLASSIFIED.                                             
      ********************************************************
      *                                                      *
      *  ASINCRONICA 18: DB2                                 *
      *  ============================                        *
      *                                                      *
      *  DEBERÁN GENERAR LISTADO DE CLIENTES CON SALIDA      *
      *  IMPRESA A UN ARCHIVO, TOMANDO LOS DATOS DESDE UN    *
      *  CURSOR QUE VALIDA CON UN SQL EMBEBIDO EN LA TABLA   *
      *  TBCURCTA.                                           * 
      *                                                      *
      ********************************************************
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA.

       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
             SELECT SALIDA  ASSIGN DDSALE
             FILE STATUS IS SW-FS-SALIDA.

       DATA DIVISION.
       FILE SECTION.
       FD SALIDA
             BLOCK CONTAINS 0 RECORDS
             RECORDING MODE IS F.

       01 REG-SALIDA      PIC X(80).

       WORKING-STORAGE SECTION.
      * Variables de fecha y hora
       01  WS-CURRENT-DATE.
           05 WS-DATE.
              10 WS-YEAR              PIC 9(4).
              10 WS-MONTH             PIC 9(2).
              10 WS-DAY               PIC 9(2).
           05 WS-TIME.
              10 WS-HOUR              PIC 9(2).
              10 WS-MINUTE            PIC 9(2).
              10 WS-SECOND            PIC 9(2).
              10 WS-HUNDREDTH         PIC 9(2).
      
      * Variables de control
       01  WS-STATUS.
           05 SW-FS-SALIDA           PIC X(02).
              88 SW-FS-OK            VALUE '00'.
              88 SW-FS-EOF           VALUE '10'.
              88 SW-FS-NOK           VALUE '01' THRU '09'
                                           '11' THRU '99'.
       77  WS-LINEAS-PAG             PIC 99    VALUE ZEROS.
       01  WS-FLAG-FIN               PIC X.
           88  WS-SI-PROCESO               VALUE ' '.
           88  WS-FIN-PROCESO              VALUE 'F'.
      * Variables sumarizadoras
       77  WS-TOT-LEIDOS-TBCURCTA    PIC 9(3)  VALUE ZEROS.
       77  WS-TOT-LEIDOS-TBCURCLI    PIC 9(3)  VALUE ZEROS.
       77  WS-ENCONTRADOS            PIC 9(3)  VALUE ZEROS.
       77  WS-NO-ENCONTRADOS         PIC 9(3)  VALUE ZEROS.
       77  WS-TOT-GRABADOS           PIC 9(3)  VALUE ZEROS.
       77  WS-TOT-SALDOS             PIC S9(13)V99 COMP-3 VALUE 0.

      * Variables de Display
       77  WS-TOT-LEIDOS-TBCURCTA-DISP  PIC ZZZ.
       77  WS-TOT-LEIDOS-TBCURCLI-DISP  PIC ZZZ.
       77  WS-ENCONTRADOS-DISP          PIC ZZZ.
       77  WS-NO-ENCONTRADOS-DISP       PIC ZZZ.
       77  WS-TOT-GRABADOS-DISP         PIC ZZZ.
       77  WS-TOT-SALDOS-DISP           PIC -$$.$$$.$$$9,99.

       01  WS-FECHA.
           03  WS-DIA   PIC 99.
           03  FILLER   PIC X         VALUE '-'.
           03  WS-MES   PIC 99.
           03  FILLER   PIC X         VALUE '-'.
           03  WS-ANIO  PIC 9999.

       01  WS-HEADERS.
           05 WS-HEAD1             PIC X(80) VALUE ALL '*'.
           05 WS-HEAD2             PIC X(80) VALUE 
              'CLIENTES ENCONTRADOS EN TABLA CLIENTES '.
           05 WS-HEAD3             PIC X(80) VALUE ALL '-'.

       01  WS-DATOS-NULOS.
           05 WS-TIPDOC-NULL       PIC S9(4) COMP-5.
           05 WS-NRODOC-NULL       PIC S9(4) COMP-5.
           05 WS-NOMAPE-NULL       PIC S9(4) COMP-5.

       01  WS-TITULO.
           03  FILLER   PIC X(02)     VALUE '| '.
           03  FILLER   PIC X(07)     VALUE 'Cliente'.
           03  FILLER   PIC X(02)     VALUE SPACES.
           03  FILLER   PIC X(06)     VALUE 'TP Doc'.
           03  FILLER   PIC X(02)     VALUE SPACES.
           03  FILLER   PIC X(11)     VALUE 'Nro Doc'.
           03  FILLER   PIC X(02)     VALUE SPACES.
           03  FILLER   PIC X(28)     VALUE 'Apellido'.
           03  FILLER   PIC X(02)     VALUE SPACES.
           03  FILLER   PIC X(08)     VALUE 'Sucursal'.
           03  FILLER   PIC X(02)     VALUE ' |'.

      *****************************************
      *         LAYOUT TABLA CUENTAS          *
      *****************************************
       01 WS-REG-SALIDA.
           03  FILLER        PIC X(02)      VALUE SPACES.
           03  REG-NROCLI    PIC ZZZ.
           03  FILLER        PIC X(06)      VALUE SPACES.
           03  REG-TIPDOC    PIC X(02)      VALUE SPACES.
           03  FILLER        PIC X(06)      VALUE SPACES.
           03  REG-NRODOC    PIC X(11)      VALUE SPACES.
           03  FILLER        PIC X(02)      VALUE SPACES.
           03  REG-NOMAPE    PIC X(30)      VALUE SPACES. 
           03  FILLER        PIC X(06)      VALUE SPACES.
           03  REG-SUCUEN    PIC X(02)      VALUE SPACES. 
           03  FILLER        PIC X(02)      VALUE SPACES.

      * SQLCA COMMUNICATION AREA
           EXEC SQL INCLUDE SQLCA END-EXEC.

      * DCLGEN de la tabla
           EXEC SQL INCLUDE TBCURCLI END-EXEC.
           EXEC SQL INCLUDE TBCURCTA END-EXEC.

      *******************************************************************
      * DECLARACION DE LAS VARIABLES HOST Y CURSOR                      *
      ******************************************************************
           EXEC SQL 
              DECLARE CURSORCTA CURSOR 
              FOR
                 SELECT A.*
                 FROM KC02787.TBCURCTA A 
                 ORDER BY A.NROCLI
           END-EXEC.

       77  FILLER  PIC X(30) VALUE '* FINAL  WORKING-STORAGE *'.

      ***************************************************************.
       PROCEDURE DIVISION.
      **************************************
      *                                    *
      *  CUERPO PRINCIPAL DEL PROGRAMA     *
      *                                    *
      **************************************
       MAIN-PROGRAM.
           PERFORM 1000-I-INICIO.
           PERFORM 2000-I-PROCESO UNTIL WS-FIN-PROCESO.
           PERFORM 9999-I-FINAL.
           GOBACK.

      **************************************
      *                                    *
      *  CUERPO INICIO APERTURA ARCHIVOS   *
      *                                    *
      **************************************
       1000-I-INICIO.
           SET WS-SI-PROCESO TO TRUE.

           OPEN OUTPUT SALIDA.
           IF NOT SW-FS-OK
              DISPLAY '* ERROR EN OPEN SALIDA  = ' SW-FS-SALIDA
              MOVE 9999 TO RETURN-CODE
              SET  WS-FIN-PROCESO TO TRUE
           END-IF.

           IF NOT SW-FS-OK
              DISPLAY '* ERROR EN WRITE SALIDA  = ' SW-FS-SALIDA
              MOVE 9999 TO RETURN-CODE
              SET  WS-FIN-PROCESO TO TRUE
           END-IF.

           PERFORM 1100-I-WRITE-TITULO

           EXEC SQL
              OPEN CURSORCTA
           END-EXEC.

           EVALUATE SQLCODE
              WHEN 0
                 CONTINUE
              WHEN OTHER
                 DISPLAY 'ERROR SQL: ' SQLCODE ' - APERTURA CURSOR'
                 MOVE 9999 TO RETURN-CODE
                 SET WS-FIN-PROCESO TO TRUE
           END-EVALUATE.

      ***************************************
      *                                     *
      *  TITULOS DEL LA PAGINA DEL PROGRAMA *
      *                                     *
      ***************************************

       1100-I-WRITE-TITULO.
           MOVE FUNCTION CURRENT-DATE TO WS-CURRENT-DATE
           *> Armado par Display de SPOOL
           DISPLAY WS-HEAD1 
           DISPLAY WS-HEAD2
           DISPLAY WS-HEAD3
           DISPLAY 'FECHA DE EJECUCION: ' 
              WS-YEAR '-' WS-MONTH '-' WS-DAY
           DISPLAY 'HORA DE EJECUCION:  ' 
              WS-HOUR ':' WS-MINUTE ':' WS-SECOND
           DISPLAY WS-HEAD1
           DISPLAY WS-TITULO

           *> Armado para el archivo de salida 
           WRITE REG-SALIDA FROM WS-HEAD3
           WRITE REG-SALIDA FROM WS-HEAD2 
           WRITE REG-SALIDA FROM WS-HEAD3
           WRITE REG-SALIDA FROM WS-TITULO
           WRITE REG-SALIDA FROM WS-HEAD3.

      **************************************
      *                                    *
      *  CUERPO PRINCIPAL DEL PROGRAMA     *
      *                                    *
      **************************************
       2000-I-PROCESO.

           EXEC SQL
              FETCH CURSORCTA
              INTO :DCLTBCURCTA
           END-EXEC

           EVALUATE SQLCODE
              WHEN 0
                 ADD 1 TO WS-TOT-LEIDOS-TBCURCTA
                 
                 *> Ejecutamos el SQL Embebdido para validar el cliente
                 EXEC SQL
                     SELECT A.*
                     INTO :DCLTBCURCLI
                     FROM KC02787.TBCURCLI A
                     WHERE A.NROCLI = :WS-NROCLI
                 END-EXEC

                 *> Evaluamos el resultado del SQL Embebido
                 IF SQLCODE = 0
                    *> Si el cliente existe, procesamos los datos
                    ADD 1 TO WS-TOT-LEIDOS-TBCURCLI
                    ADD 1 TO WS-ENCONTRADOS
                    ADD WS-SALDO TO WS-TOT-SALDOS
                    MOVE WS-NROCLI TO REG-NROCLI
                    MOVE WT-TIPDOC TO REG-TIPDOC
                    MOVE WT-NRODOC TO REG-NRODOC
                    MOVE WT-NOMAPE TO REG-NOMAPE
                    MOVE WS-SUCUEN TO REG-SUCUEN
                    *> Grabar el registro en el archivo de salida
                    IF SW-FS-OK
                       DISPLAY WS-REG-SALIDA
                       WRITE REG-SALIDA FROM WS-REG-SALIDA
                       ADD 1 TO WS-TOT-GRABADOS
                       ADD 1 TO WS-LINEAS-PAG
                       IF WS-LINEAS-PAG EQUAL 30
                          MOVE ZEROS TO WS-LINEAS-PAG
                          PERFORM 1100-I-WRITE-TITULO
                       END-IF
                    ELSE
                       DISPLAY '* ERROR EN WRITE SALIDA = ' 
                              SW-FS-SALIDA
                       MOVE 9999 TO RETURN-CODE
                       SET WS-FIN-PROCESO TO TRUE
                    END-IF
                 ELSE
                    *> Si no se encuentra el cliente, lo registramos
                    DISPLAY WS-HEAD3
                    DISPLAY 'CUENTA SIN CLIENTE EN TBCURCLI // NRO CLI'
                     WS-NROCLI
                    ADD 1 TO WS-NO-ENCONTRADOS
                 END-IF

              WHEN +100
                 SET WS-FIN-PROCESO TO TRUE

              WHEN OTHER
                 DISPLAY 'ERROR SQL: ' SQLCODE
                 SET WS-FIN-PROCESO TO TRUE
           END-EVALUATE.

      **************************************
      *                                    *
      *  CUERPO FINAL CIERRE DE FILES      *
      *                                    *
      **************************************
       9999-I-FINAL.
           EXEC SQL
              CLOSE CURSORCTA
           END-EXEC.

           EVALUATE SQLCODE
              WHEN 0
                 CONTINUE
              WHEN OTHER
                 DISPLAY 'ERROR SQL: ' SQLCODE ' - CIERRE CURSOR'
                 MOVE 9999 TO RETURN-CODE
           END-EVALUATE.

           CLOSE SALIDA
           IF NOT SW-FS-OK
              DISPLAY '* ERROR EN CLOSE SALIDA  = ' SW-FS-SALIDA
              MOVE 9999 TO RETURN-CODE
           END-IF.

      **************************************
      *   MOSTRAR TOTALES DE CONTROL
      **************************************
           DISPLAY WS-HEAD3
           DISPLAY ' '
           DISPLAY WS-HEAD1
           DISPLAY WS-HEAD3
           MOVE WS-TOT-SALDOS TO WS-TOT-SALDOS-DISP
           DISPLAY 'SALDOS TOTALES : ' WS-TOT-SALDOS-DISP
           DISPLAY WS-HEAD3
           MOVE WS-TOT-LEIDOS-TBCURCTA TO WS-TOT-LEIDOS-TBCURCTA-DISP
           DISPLAY 'LEIDOS EN TBCURCTA : ' WS-TOT-LEIDOS-TBCURCTA-DISP
           MOVE WS-TOT-LEIDOS-TBCURCLI TO WS-TOT-LEIDOS-TBCURCLI-DISP 
           DISPLAY 'LEIDOS EN TBCURCLI : ' WS-TOT-LEIDOS-TBCURCLI-DISP
           MOVE WS-ENCONTRADOS TO WS-ENCONTRADOS-DISP
           DISPLAY 'CANTIDAD ENCONTRADOS : ' WS-ENCONTRADOS-DISP
           MOVE WS-NO-ENCONTRADOS TO WS-NO-ENCONTRADOS-DISP 
           DISPLAY 'CANTIDAD NO ENCONTRADOS : ' WS-NO-ENCONTRADOS-DISP
           MOVE WS-TOT-GRABADOS TO WS-TOT-GRABADOS-DISP
           DISPLAY 'CANTIDAD REGISTROS IMPRESOS : ' WS-TOT-GRABADOS-DISP
           DISPLAY WS-HEAD1
           EXIT.
      *
